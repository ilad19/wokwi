#define BLYNK_TEMPLATE_ID "TMPL2EZbg3mw6"
#define BLYNK_TEMPLATE_NAME "Quickstart Template"
#define BLYNK_AUTH_TOKEN "hy8VVLEoVHIzt_q2oWnTj9-fLwXsFr64"
#define BLYNK_PRINT Serial
#include "DHT.h"
#include <WiFi.h>
#include <WiFiClient.h>
#include <BlynkSimpleEsp32.h>

#define DHTPIN 21
#define DHTTYPE DHT22
#define PIRPIN 18
#define RELAYPIN 23
#define LDRPIN 2

char auth[] = BLYNK_AUTH_TOKEN;
char ssid[] = "Wokwi-GUEST";
char pass[] = "";

DHT dht(DHTPIN, DHTTYPE);

BlynkTimer timer;

void sendSensorData()
{
  float h = dht.readHumidity();
  float t = dht.readTemperature();
  int ldrValue = analogRead(LDRPIN);
  int pirValue = digitalRead(PIRPIN);

  if (isnan(h) || isnan(t)) {
    Serial.println("Failed to read from DHT sensor!");
    return;
  }

  Blynk.virtualWrite(V5, h);
  Blynk.virtualWrite(V6, t);
  Blynk.virtualWrite(V7, ldrValue);
  Blynk.virtualWrite(V8, pirValue);

}

BLYNK_WRITE(V1) {
  int relayState = param.asInt();
  digitalWrite(RELAYPIN, relayState);
}

void setup()
{
  Serial.begin(115200);
  Blynk.begin(auth, ssid, pass);

  dht.begin();

  pinMode(PIRPIN, INPUT);
  pinMode(RELAYPIN, OUTPUT);

  timer.setInterval(1000L, sendSensorData);
}

void loop()
{
  Blynk.run();
  timer.run();

  int pirValue = digitalRead(PIRPIN);
  
  if (pirValue == HIGH) {
    Blynk.virtualWrite(V9, HIGH);
    Serial.println("Motion detected! Turning on air conditioning in Blynk app.");
  } else {
    Blynk.virtualWrite(V9, LOW);
    Serial.println("No motion detected. Turning off air conditioning in Blynk app.");
  }
}
